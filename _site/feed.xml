<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>r4pt3r-blog</title>
    <description>My blog posts</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 22 Feb 2019 21:01:36 +0530</pubDate>
    <lastBuildDate>Fri, 22 Feb 2019 21:01:36 +0530</lastBuildDate>
    <generator>Jekyll v3.4.3</generator>
    
      <item>
        <title>PHP Object Injection</title>
        <description>&lt;h1 id=&quot;what-is-php-object-injection-&quot;&gt;What is PHP Object Injection ?&lt;/h1&gt;
&lt;p&gt;PHP Object Injection is an application level vulnerability that could allow an attacker to perform different kinds of malicious attacks, such as Code Injection, SQL Injection, Path Traversal and Application Denial of Service, depending on the context.&lt;/p&gt;

&lt;h1 id=&quot;objects&quot;&gt;Objects&lt;/h1&gt;
&lt;p&gt;Object in PHP is same as the oops concept. Object are defined by a class.&lt;/p&gt;

&lt;h1 id=&quot;class&quot;&gt;Class&lt;/h1&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Home&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bedrooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__construct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bedrooms&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add_bedrooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bedrooms&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This sample code contains one private variable named bedrooms and two functions are there, __construct() is a magic method and add_bedrooms() is made to add the bedrooms. The class name is Home here.&lt;/p&gt;

&lt;h1 id=&quot;objects-1&quot;&gt;Objects&lt;/h1&gt;
&lt;p&gt;We can create a new object using new keyword&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Home.php&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$flat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Home&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$flat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add_bedrooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$villa&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Home&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;    
&lt;span class=&quot;nv&quot;&gt;$villa&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add_bedrooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Here we made two objects which are flat and villa and we added number of bedrooms with the help of the function as we created before which is add_bedrooms.&lt;/p&gt;

&lt;h1 id=&quot;serialization&quot;&gt;Serialization&lt;/h1&gt;
&lt;p&gt;Serialization is used for easy transfer of objects&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;serialize() makes the class/object to string&lt;/li&gt;
  &lt;li&gt;Unserialize() contents back to class/object&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Unserialization of user controlled data is dangerous&lt;/p&gt;

&lt;p&gt;Example of a serialized output O:4:”Bike”:1:{s:5:”color”;s:5:”black”;}&lt;/p&gt;

&lt;p&gt;What this represents ?&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;O:4:”Bike”:1
    &lt;ul&gt;
      &lt;li&gt;O - Object&lt;/li&gt;
      &lt;li&gt;4 - Number of letters of the class name “Bike”&lt;/li&gt;
      &lt;li&gt;“Bike” - Class name&lt;/li&gt;
      &lt;li&gt;1 - Number of properties&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;{s:5:”color”;s:5:”black”;}
    &lt;ul&gt;
      &lt;li&gt;Object’s properties with it’s values&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;serialized-formats&quot;&gt;Serialized Formats&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;boolean
    &lt;ul&gt;
      &lt;li&gt;b:&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;value&amp;gt;&lt;/code&gt;;&lt;/li&gt;
      &lt;li&gt;b:1;    &lt;code class=&quot;highlighter-rouge&quot;&gt;//True&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;b:0;    &lt;code class=&quot;highlighter-rouge&quot;&gt;//False&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;integer
    &lt;ul&gt;
      &lt;li&gt;i:&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;value&amp;gt;&lt;/code&gt;;&lt;/li&gt;
      &lt;li&gt;i:1;     &lt;code class=&quot;highlighter-rouge&quot;&gt;//1&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;i:-3;    &lt;code class=&quot;highlighter-rouge&quot;&gt;//-3&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;double
    &lt;ul&gt;
      &lt;li&gt;d:&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;value&amp;gt;&lt;/code&gt;;&lt;/li&gt;
      &lt;li&gt;d:1.1234500001;     &lt;code class=&quot;highlighter-rouge&quot;&gt;//1.12345&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;NULL
    &lt;ul&gt;
      &lt;li&gt;N;     &lt;code class=&quot;highlighter-rouge&quot;&gt;//NULL&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;string
    &lt;ul&gt;
      &lt;li&gt;s:&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;length&amp;gt;&lt;/code&gt;:”&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;value&amp;gt;&lt;/code&gt;”;&lt;/li&gt;
      &lt;li&gt;s:6:”r4pt3r”;     &lt;code class=&quot;highlighter-rouge&quot;&gt;//&quot;r4pt3r&quot;&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;array
    &lt;ul&gt;
      &lt;li&gt;a:&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;lenght&amp;gt;&lt;/code&gt;:{key, value pairs};&lt;/li&gt;
      &lt;li&gt;a:2::{s:4:”key1”;s:6:”value1”;
s:4:”key2”;s:6:”value2”;}    
&lt;code class=&quot;highlighter-rouge&quot;&gt;//array(&quot;key1&quot; =&amp;gt; &quot;value1&quot;,
&quot;key2&quot; =&amp;gt; &quot;value2&quot;);&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;serialized-output&quot;&gt;Serialized output&lt;/h1&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Home&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$bedrooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__construct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bedrooms&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add_bedrooms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$bedrooms&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;serialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Home&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;The output will be O:4:”Home”:1:{s:14:”Homebedrooms”;i:0;}&lt;/p&gt;

&lt;h1 id=&quot;magic-methods&quot;&gt;Magic Methods&lt;/h1&gt;
&lt;p&gt;PHP provides a number of ‘magic’ methods that allow you to do some pretty neat tricks in object oriented programming. These methods, identified by a two underscore prefix (__), function as interceptors that are automatically called when certain conditions are met&lt;/p&gt;

&lt;p&gt;Some magic methods are given below&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;__construct(), __destruct()&lt;/li&gt;
  &lt;li&gt;__call(), __set()&lt;/li&gt;
  &lt;li&gt;__get(), __set()&lt;/li&gt;
  &lt;li&gt;__isset(), __unset()&lt;/li&gt;
  &lt;li&gt;__sleep(), __wakeup()&lt;/li&gt;
  &lt;li&gt;__toString()&lt;/li&gt;
  &lt;li&gt;__invoke()&lt;/li&gt;
  &lt;li&gt;__set_state()&lt;/li&gt;
  &lt;li&gt;__clone()&lt;/li&gt;
  &lt;li&gt;__debugInfo()&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 18 Feb 2019 00:00:00 +0530</pubDate>
        <link>http://localhost:4000/2019/02/PHP-Objects.html</link>
        <guid isPermaLink="true">http://localhost:4000/2019/02/PHP-Objects.html</guid>
        
        <category>PHP,</category>
        
        <category>web-sec,</category>
        
        <category>object-injection</category>
        
        
      </item>
    
      <item>
        <title>Installing Magento 2</title>
        <description>&lt;p&gt;How to install Magento 2 on Ubuntu&lt;/p&gt;

&lt;h3 id=&quot;what-is-magento-&quot;&gt;What is Magento ?&lt;/h3&gt;
&lt;p&gt;Magento is a web framework for e-commerce websites. Magento have two versions which are Magento 1.x and Magento 2.x. Magento 2.x is having more cool features.&lt;/p&gt;

&lt;h3 id=&quot;system-requirements&quot;&gt;System requirements&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Apache 2.2 or 2.4&lt;/li&gt;
  &lt;li&gt;Nginx 1.x&lt;/li&gt;
  &lt;li&gt;MySQL 5.6, 5.7&lt;/li&gt;
  &lt;li&gt;PHP 7.1.3+, 7.2.x&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;follow-with-the-commands&quot;&gt;Follow with the commands&lt;/h3&gt;
&lt;p&gt;Update all the packages&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; sudo apt-get update
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Install PHP MySQl and all other extensions&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install apache2 php libapache2-mod-php mysql-server php-mysql php-dom php-simplexml php-curl php-intl php-xsl php-mbstring php-zip php-xml composer
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install php7.2-gd
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install php7.2-mcrypt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo a2enmod rewrite
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Go inside Apache2 config files and search for Indexes, then change AllowOverride from ‘none’ to ‘all’&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo vim /etc/apache2/apache2.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Then restart Apache&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;systemctl restart apache2.service
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Go inside the /var/www/html clone the Magento 2 files&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo git clone https://github.com/magento/magento2.git
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;magento2
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;composer install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;If composer install shows any errors it maybe missing of any php extensions, then just try once more after installing those php extensions.&lt;/p&gt;

&lt;p&gt;Change permissions&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo chown -R www-data:www-data .
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Now the Magento 2 is installed. Now you can check your localhost and configure Magento 2. You have to make a database for Magento 2. Intsalling instructions will guides you further.&lt;/p&gt;
</description>
        <pubDate>Thu, 14 Feb 2019 00:00:00 +0530</pubDate>
        <link>http://localhost:4000/2019/02/Installing-Magento-2.html</link>
        <guid isPermaLink="true">http://localhost:4000/2019/02/Installing-Magento-2.html</guid>
        
        <category>magento-2,</category>
        
        <category>web-framework,</category>
        
        <category>e-commerce,</category>
        
        <category>web-devolpment</category>
        
        
      </item>
    
  </channel>
</rss>
